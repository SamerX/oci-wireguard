FROM golang:1.17.3-alpine3.14 as build-env


RUN apk add --no-cache git gcc
RUN mkdir /app

WORKDIR /app

COPY . .

RUN export appVersion=$(git describe --tags `git rev-list -1 HEAD`) && \
    CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
      -ldflags "-X main.appVersion=$appVersion" \
      -o wgrest cmd/wgrest-server/main.go

FROM alpine:3.18
RUN apk add --no-cache wireguard-tools

COPY --from=build-env /app/wgrest .

EXPOSE 8080/tcp

USER 1001

ENTRYPOINT ["./wgrest"]





COPY --chown=wireguard:wireguard Entrypoint.sh ./Entrypoint.sh
RUN sed -i 's/\r$//' Entrypoint.sh && \
    chmod +x Entrypoint.sh

# The CMD instruction to start wgrest and your entrypoint script
CMD ["/bin/sh", "-c", "wgrest --listen '127.0.0.1:8000' & /home/wireguard/Entrypoint.sh"]